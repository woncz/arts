See the Assessment Guide for information on how to interpret this report.

ASSESSMENT SUMMARY

Compilation:  FAILED (0 errors, 1 warning)
API:          PASSED

Spotbugs:     FAILED (2 warnings)
PMD:          FAILED (13 warnings)
Checkstyle:   FAILED (0 errors, 4 warnings)

Correctness:  6/51 tests passed
Memory:       17/22 tests passed
Timing:       100/125 tests passed

Aggregate score: 35.79%
[Compilation: 5%, API: 5%, Spotbugs: 0%, PMD: 0%, Checkstyle: 0%, Correctness: 60%, Memory: 10%, Timing: 20%]

ASSESSMENT DETAILS

The following files were submitted:
----------------------------------
6.0K Dec 28 06:08 Board.java
3.7K Dec 28 06:08 Solver.java


********************************************************************************
*  COMPILING                                                                    
********************************************************************************


% javac11 Board.java
*-----------------------------------------------------------
Board.java:193: warning: [rawtypes] found raw type: Iterator
        Iterator it = board.neighbors().iterator();
        ^
  missing type arguments for generic class Iterator<E>
  where E is a type-variable:
    E extends Object declared in interface Iterator
1 warning

% javac11 Solver.java
*-----------------------------------------------------------


================================================================


Checking the APIs of your programs.
*-----------------------------------------------------------
Board:

Solver:

================================================================


********************************************************************************
*  CHECKING STYLE AND COMMON BUG PATTERNS                                       
********************************************************************************


% spotbugs *.class
*-----------------------------------------------------------
M B IT_NO_SUCH_ELEMENT It: The 'next()' method must throw a 'java.util.NoSuchElementException' if it is called when there are no more elements to return.  At Board.java:[line 156]
M P URF_UNREAD_FIELD UrF: The instance (or static) variable 'initial' is never read. Consider removing it from the class.  At Solver.java:[line 47]
Warnings generated: 2


================================================================


% pmd .
*-----------------------------------------------------------
Board.java:13: The private instance (or static) variable 'N' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
Board.java:115: Array initialization can be written shorter [UseShortArrayInitializer]
Board.java:116: Array initialization can be written shorter [UseShortArrayInitializer]
Board.java:143: The private instance (or static) variable 'neighbors' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
Board.java:180: Array initialization can be written shorter [UseShortArrayInitializer]
Solver.java:12: The private instance (or static) variable 'solutions' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
Solver.java:16: Avoid unused private instance (or static) variables, such as 'initial'. [UnusedPrivateField]
Solver.java:16: Can you replace the instance (or static) variable 'initial' with a local variable? [SingularField]
Solver.java:16: The private instance (or static) variable 'initial' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
Solver.java:20: The private instance (or static) variable 'previous' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
Solver.java:22: The private instance (or static) variable 'current' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
Solver.java:24: The private instance (or static) variable 'priority' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
Solver.java:26: The private instance (or static) variable 'move' can be made 'final'; it is initialized only in the declaration or constructor. [ImmutableField]
PMD ends with 13 warnings.


================================================================


% checkstyle *.java
*-----------------------------------------------------------
[WARN] Board.java:13:17: The instance variable 'N' must start with a lowercase letter and use camelCase. [MemberName]
[WARN] Solver.java:36:41: Do not use the letter 'o' as a parameter variable name. It is hard to distinguish from the number '0'. [ParameterName]
Checkstyle ends with 0 errors and 2 warnings.

% custom checkstyle checks for Board.java
*-----------------------------------------------------------
[WARN] Board.java:9:1: Defining a nested class in this program suggests poor design. [DescendantToken]
[WARN] Board.java:140:36: Using interface inheritance suggests poor design in this program. For example, 'Board' should be neither 'Comparable' nor 'Iterable'. [Design]
Checkstyle ends with 0 errors and 2 warnings.

% custom checkstyle checks for Solver.java
*-----------------------------------------------------------


================================================================


********************************************************************************
*  TESTING CORRECTNESS
********************************************************************************

Testing correctness of Board
*-----------------------------------------------------------
Running 26 total tests.

Tests 4-7 and 14-17 rely upon toString() returning results in prescribed format.

Test 1a: check hamming() with file inputs
  * puzzle04.txt
  * puzzle00.txt
  * puzzle07.txt
  * puzzle17.txt
  * puzzle27.txt
  * puzzle2x2-unsolvable1.txt
==> passed

Test 1b: check hamming() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 9-by-9
  * 10-by-10
  * 127-by-127
==> passed

Test 2a: check manhattan() with file inputs
  * puzzle04.txt
  * puzzle00.txt
  * puzzle07.txt
  * puzzle17.txt
  * puzzle27.txt
  * puzzle2x2-unsolvable1.txt
==> passed

Test 2b: check manhattan() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 9-by-9
  * 10-by-10
  * 127-by-127
==> passed

Test 3: check dimension() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 6-by-6
==> passed

Test 4a: check toString() with file inputs
  * puzzle04.txt
  * puzzle00.txt
  * puzzle06.txt
  * puzzle09.txt
  * puzzle23.txt
  * puzzle2x2-unsolvable1.txt
==> passed

Test 4b: check toString() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 9-by-9
  * 10-by-10
  * 127-by-127
==> passed

Test 5a: check neighbors() with file inputs
  * puzzle04.txt
  * puzzle00.txt
  * puzzle06.txt
  * puzzle09.txt
  * puzzle23.txt
  * puzzle2x2-unsolvable1.txt
==> passed

Test 5b: check neighbors() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 9-by-9
  * 10-by-10
  * 127-by-127
==> passed

Test 6a: check neighbors() of neighbors() with file inputs
  * puzzle04.txt
  * puzzle00.txt
  * puzzle06.txt
  * puzzle09.txt
  * puzzle23.txt
  * puzzle2x2-unsolvable1.txt
==> passed

Test 6b: check neighbors() of neighbors() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 9-by-9
  * 10-by-10
==> passed

Test 7a: check twin() with file inputs
  * puzzle04.txt
  * puzzle00.txt
  * puzzle06.txt
    - twin() doesn't return a twin
        4
         1  0  2  3  
         5  6  7  4  
         9  10  11  8  
         13  14  15  12  


  * puzzle09.txt
  * puzzle23.txt
  * puzzle2x2-unsolvable1.txt
==> FAILED

Test 7b: check twin() with random n-by-n boards
  * 2-by-2
    - twin() doesn't return a twin
        2
         3  0  
         1  2  


    - failed on trial 1 of 1000

  * 3-by-3
    - twin() doesn't return a twin
        3
         6  8  4  
         5  0  3  
         1  2  7  


    - failed on trial 2 of 1000

  * 4-by-4
    - twin() doesn't return a twin
        4
         15  1  10  6  
         11  12  3  4  
         5  14  7  0  
         8  13  9  2  


    - failed on trial 1 of 1000

  * 5-by-5
    - twin() doesn't return a twin
        5
         14  8  19  11  24  
         12  5  15  9  6  
         2  18  7  20  16  
         4  17  3  0  1  
         13  23  22  10  21  


    - failed on trial 3 of 1000

  * 9-by-9
    - twin() doesn't return a twin
        9
         48  35  29  68  51  8  79  20  4  
         58  36  43  49  13  40  23  59  14  
         21  75  3  72  74  56  38  46  25  
         76  9  57  5  73  1  67  15  27  
         70  60  17  28  6  39  54  62  66  
         44  31  10  19  37  52  41  47  7  
         42  32  30  69  34  12  11  2  26  
         53  22  65  80  50  45  33  55  0  
         77  78  18  64  61  24  71  16  63  


    - failed on trial 77 of 100

  * 10-by-10
==> FAILED

Test 8a: check isGoal() with file inputs
  * puzzle00.txt
  * puzzle04.txt
  * puzzle16.txt
  * puzzle06.txt
  * puzzle09.txt
  * puzzle23.txt
  * puzzle2x2-unsolvable1.txt
  * puzzle3x3-unsolvable1.txt
  * puzzle3x3-00.txt
  * puzzle4x4-00.txt
==> passed

Test 8b: check isGoal() on n-by-n goal boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 6-by-6
  * 100-by-100
==> passed

Test 9: check that two Board objects can be created at the same time
  * random 3-by-3 and 3-by-3 boards
  * random 4-by-4 and 4-by-4 boards
  * random 2-by-2 and 2-by-2 boards
  * random 3-by-3 and 4-by-4 boards
  * random 4-by-4 and 3-by-3 boards
==> passed

Test 10a: check equals()
  * reflexive
  * symmetric
  * transitive
  * argument is null
  * argument is of type String
  * argument is of type UncastableString
  * Board object stored in a variable of type Object
==> passed

Test 10b: check correctness of equals() on random n-by-n boards
  * n = 2
  * n = 3
  * n = 4
  * 5 <= n < 10
==> passed

Test 10c: check equals() when board sizes m and n are different
  * m = 4, n = 5
  * m = 2, n = 5
  * m = 5, n = 3
  * m = 2, n = 3
  * m = 3, n = 2
==> passed

Test 11: check that Board is immutable by changing argument array after
         construction and making sure Board does not mutate
==> passed

Test 12: check that Board is immutable by testing whether methods
         return the same value, regardless of order in which called
  * puzzle10.txt
    - failed after 12 calls to random methods in Board
    - first call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  59  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  25  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - last  call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  25  26  27  
         28  29  30  31  70  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  59  60  61  62  63  
         64  0  65  67  68  78  69  32  72  
         73  74  66  75  76  77  79  71  80  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 16 calls to random methods in Board
    - first call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  59  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  25  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - last  call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  25  26  27  
         28  29  30  0  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  59  60  61  62  63  
         64  31  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 27 calls to random methods in Board
    - first call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  59  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  25  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - last  call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         29  20  21  22  23  24  25  26  27  
         28  19  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  59  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 29 calls to random methods in Board
    - first call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  59  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  25  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - last  call to twin() =
        9
         79  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  25  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  59  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  1  71  80  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 30 calls to random methods in Board
    - first call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  59  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  25  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - last  call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  25  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  71  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  59  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  40  80  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 35 calls to random methods in Board
    - first call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  59  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  25  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - last  call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  25  26  27  
         28  29  30  31  32  33  57  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  34  58  59  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 48 calls to random methods in Board
    - first call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  59  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  25  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - last  call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  25  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  72  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  59  60  61  62  63  
         64  0  65  67  68  78  69  70  45  
         73  74  66  75  76  77  79  71  80  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 65 calls to random methods in Board
    - first call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  59  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  25  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - last  call to twin() =
        9
         1  2  3  4  5  6  7  8  32  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  25  26  27  
         28  29  30  31  9  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  59  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 70 calls to random methods in Board
    - first call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  59  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  25  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - last  call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  25  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  42  40  41  39  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  59  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 76 calls to random methods in Board
    - first call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  59  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  25  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - last  call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  25  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  66  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  59  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  41  75  76  77  79  71  80  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 87 calls to random methods in Board
    - first call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  59  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  25  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - last  call to twin() =
        9
         1  2  3  4  5  6  7  8  23  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  9  24  25  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  59  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 91 calls to random methods in Board
    - first call to twin() =
        9
         1  2  3  4  5  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  59  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  45  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  25  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - last  call to twin() =
        9
         1  2  3  4  45  6  7  8  9  
         10  11  12  13  14  15  16  17  18  
         19  20  21  22  23  24  25  26  27  
         28  29  30  31  32  33  34  35  36  
         37  38  39  40  41  42  43  44  5  
         46  47  48  49  50  51  52  53  54  
         55  56  57  58  59  60  61  62  63  
         64  0  65  67  68  78  69  70  72  
         73  74  66  75  76  77  79  71  80  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

  * puzzle20.txt
    - failed after 10 calls to random methods in Board
    - first call to twin() =
        3
         1  6  4  
         7  0  5  
         2  3  8  

    - last  call to twin() =
        3
         1  6  4  
         3  0  8  
         2  7  5  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false
    - sequence of Board operations was:
         Board board = new Board(tiles)
         board.equals(other) ==> true
         board.manhattan()   ==> 16
         board.equals(other) ==> true
         board.twin()
         board.toString()
         board.hamming()     ==> 7
         board.isGoal()      ==> false
         board.isGoal()      ==> false
         board.toString()
         board.twin()

    - failed after 43 calls to random methods in Board
    - first call to twin() =
        3
         1  6  4  
         7  0  5  
         2  3  8  

    - last  call to twin() =
        3
         1  6  2  
         7  0  8  
         4  3  5  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 55 calls to random methods in Board
    - first call to twin() =
        3
         1  6  4  
         7  0  5  
         2  3  8  

    - last  call to twin() =
        3
         6  1  4  
         7  0  8  
         2  3  5  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 63 calls to random methods in Board
    - first call to twin() =
        3
         1  6  4  
         7  0  5  
         2  3  8  

    - last  call to twin() =
        3
         2  6  4  
         7  0  8  
         1  3  5  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 67 calls to random methods in Board
    - first call to twin() =
        3
         1  6  4  
         7  0  5  
         2  3  8  

    - last  call to twin() =
        3
         1  6  4  
         2  0  8  
         7  3  5  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 88 calls to random methods in Board
    - first call to twin() =
        3
         1  6  4  
         7  0  5  
         2  3  8  

    - last  call to twin() =
        3
         1  4  6  
         7  0  8  
         2  3  5  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

  * puzzle30.txt
    - failed after 11 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         8  5  7  
         1  4  6  
         3  2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false
    - sequence of Board operations was:
         Board board = new Board(tiles)
         board.manhattan()   ==> 16
         board.isGoal()      ==> false
         board.twin()
         board.toString()
         board.hamming()     ==> 6
         board.equals(other) ==> false
         board.neighbors()
         board.equals(other) ==> true
         board.toString()
         board.manhattan()   ==> 16
         board.twin()

    - failed after 18 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         8  2  7  
         1  5  6  
         3  4  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 30 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         8  7  4  
         1  5  6  
         3  2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 31 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         8  4  7  
         1  5  6  
         3  0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 37 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         8  4  7  
         1  2  6  
         3  5  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 38 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         2  4  7  
         1  5  6  
         3  8  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 44 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         4  8  7  
         1  5  6  
         3  2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 46 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         5  4  7  
         1  8  6  
         3  2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 53 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         8  4  1  
         7  5  6  
         3  2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 58 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         8  0  7  
         1  5  6  
         3  2  4  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 75 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         8  4  7  
         1  2  6  
         3  5  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 79 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         8  4  7  
         1  5  3  
         6  2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 87 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         8  2  7  
         1  5  6  
         3  4  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 96 calls to random methods in Board
    - first call to twin() =
        3
         0  4  7  
         1  5  6  
         3  2  8  

    - last  call to twin() =
        3
         8  4  3  
         1  5  6  
         7  2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

  * 2-by-2
    - failed after 5 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  0  
         2  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false
    - sequence of Board operations was:
         Board board = new Board(tiles)
         board.manhattan()   ==> 4
         board.equals(other) ==> false
         board.twin()
         board.neighbors()
         board.twin()

    - failed after 20 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  2  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 37 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  0  
         2  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 59 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  2  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 65 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  3  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 72 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         0  3  
         2  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 74 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         3  1  
         2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 80 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  2  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 90 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  3  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 3 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         2  0  
         1  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false
    - sequence of Board operations was:
         Board board = new Board(tiles)
         board.equals(other) ==> false
         board.twin()
         board.twin()

    - failed after 8 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         2  1  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false
    - sequence of Board operations was:
         Board board = new Board(tiles)
         board.equals(other) ==> false
         board.twin()
         board.twin()
         board.hamming()     ==> 2
         board.equals(other) ==> true
         board.equals(other) ==> true
         board.equals(other) ==> true
         board.twin()

    - failed after 9 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         2  3  
         0  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false
    - sequence of Board operations was:
         Board board = new Board(tiles)
         board.equals(other) ==> false
         board.twin()
         board.twin()
         board.hamming()     ==> 2
         board.equals(other) ==> true
         board.equals(other) ==> true
         board.equals(other) ==> true
         board.twin()
         board.twin()

    - failed after 24 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         1  0  
         3  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 28 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         1  0  
         3  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 38 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         2  3  
         0  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 40 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         2  1  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 48 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         2  1  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 55 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         0  2  
         3  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 63 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         2  1  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 64 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         1  0  
         3  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 89 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         2  0  
         1  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 91 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         2  3  
         0  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 100 calls to random methods in Board
    - first call to twin() =
        2
         3  0  
         2  1  

    - last  call to twin() =
        2
         2  0  
         1  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 10 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         2  1  
         0  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false
    - sequence of Board operations was:
         Board board = new Board(tiles)
         board.equals(other) ==> false
         board.twin()
         board.manhattan()   ==> 3
         board.equals(other) ==> true
         board.toString()
         board.neighbors()
         board.hamming()     ==> 3
         board.hamming()     ==> 3
         board.equals(other) ==> true
         board.twin()

    - failed after 25 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         3  1  
         2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 26 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         3  2  
         0  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 32 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         2  1  
         0  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 36 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         3  2  
         0  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 45 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         1  3  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 47 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         3  0  
         1  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 49 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         3  2  
         0  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 63 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         3  1  
         2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 81 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         1  3  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 85 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         3  0  
         1  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 86 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         3  1  
         2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 89 calls to random methods in Board
    - first call to twin() =
        2
         0  1  
         3  2  

    - last  call to twin() =
        2
         3  0  
         1  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 11 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         1  2  

    - last  call to twin() =
        2
         0  1  
         2  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false
    - sequence of Board operations was:
         Board board = new Board(tiles)
         board.hamming()     ==> 2
         board.equals(other) ==> true
         board.equals(other) ==> false
         board.toString()
         board.equals(other) ==> false
         board.equals(other) ==> true
         board.isGoal()      ==> false
         board.equals(other) ==> false
         board.twin()
         board.isGoal()      ==> false
         board.twin()

    - failed after 14 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         1  2  

    - last  call to twin() =
        2
         3  1  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 15 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         1  2  

    - last  call to twin() =
        2
         2  1  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 21 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         1  2  

    - last  call to twin() =
        2
         1  0  
         3  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 33 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         1  2  

    - last  call to twin() =
        2
         3  1  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 36 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         1  2  

    - last  call to twin() =
        2
         1  0  
         3  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 80 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         1  2  

    - last  call to twin() =
        2
         0  1  
         2  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 83 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         1  2  

    - last  call to twin() =
        2
         1  0  
         3  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 99 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         1  2  

    - last  call to twin() =
        2
         3  1  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 8 calls to random methods in Board
    - first call to twin() =
        2
         1  2  
         0  3  

    - last  call to twin() =
        2
         2  3  
         0  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false
    - sequence of Board operations was:
         Board board = new Board(tiles)
         board.equals(other) ==> false
         board.toString()
         board.twin()
         board.equals(other) ==> true
         board.manhattan()   ==> 3
         board.hamming()     ==> 3
         board.manhattan()   ==> 3
         board.twin()

    - failed after 18 calls to random methods in Board
    - first call to twin() =
        2
         1  2  
         0  3  

    - last  call to twin() =
        2
         3  1  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 19 calls to random methods in Board
    - first call to twin() =
        2
         1  2  
         0  3  

    - last  call to twin() =
        2
         2  1  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 27 calls to random methods in Board
    - first call to twin() =
        2
         1  2  
         0  3  

    - last  call to twin() =
        2
         2  1  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 33 calls to random methods in Board
    - first call to twin() =
        2
         1  2  
         0  3  

    - last  call to twin() =
        2
         3  1  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 38 calls to random methods in Board
    - first call to twin() =
        2
         1  2  
         0  3  

    - last  call to twin() =
        2
         0  1  
         2  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 49 calls to random methods in Board
    - first call to twin() =
        2
         1  2  
         0  3  

    - last  call to twin() =
        2
         2  3  
         0  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 55 calls to random methods in Board
    - first call to twin() =
        2
         1  2  
         0  3  

    - last  call to twin() =
        2
         2  1  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 61 calls to random methods in Board
    - first call to twin() =
        2
         1  2  
         0  3  

    - last  call to twin() =
        2
         0  1  
         2  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 97 calls to random methods in Board
    - first call to twin() =
        2
         1  2  
         0  3  

    - last  call to twin() =
        2
         2  3  
         0  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 98 calls to random methods in Board
    - first call to twin() =
        2
         1  2  
         0  3  

    - last  call to twin() =
        2
         2  0  
         1  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 9 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         2  1  

    - last  call to twin() =
        2
         1  2  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false
    - sequence of Board operations was:
         Board board = new Board(tiles)
         board.toString()
         board.equals(other) ==> true
         board.equals(other) ==> true
         board.isGoal()      ==> false
         board.hamming()     ==> 2
         board.neighbors()
         board.twin()
         board.equals(other) ==> false
         board.twin()

    - failed after 17 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         2  1  

    - last  call to twin() =
        2
         1  3  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 23 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         2  1  

    - last  call to twin() =
        2
         1  0  
         2  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 28 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         2  1  

    - last  call to twin() =
        2
         1  3  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 49 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         2  1  

    - last  call to twin() =
        2
         1  2  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 54 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         2  1  

    - last  call to twin() =
        2
         1  0  
         2  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 63 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         2  1  

    - last  call to twin() =
        2
         3  1  
         2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 64 calls to random methods in Board
    - first call to twin() =
        2
         0  3  
         2  1  

    - last  call to twin() =
        2
         1  3  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 19 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         1  2  
         0  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 21 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         0  3  
         1  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 22 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         0  3  
         1  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 31 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         1  0  
         3  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 32 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         2  3  
         0  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 41 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         1  0  
         3  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 51 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         1  0  
         3  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 61 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         3  1  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 80 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         3  1  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 81 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         1  0  
         3  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 90 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         1  0  
         3  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 91 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         1  2  
         0  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 97 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         2  0  

    - last  call to twin() =
        2
         2  3  
         0  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 9 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  3  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false
    - sequence of Board operations was:
         Board board = new Board(tiles)
         board.twin()
         board.isGoal()      ==> false
         board.equals(other) ==> false
         board.equals(other) ==> false
         board.neighbors()
         board.isGoal()      ==> false
         board.equals(other) ==> true
         board.neighbors()
         board.twin()

    - failed after 26 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  3  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 30 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  2  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 40 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         3  1  
         2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 48 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  2  
         3  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 64 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         0  3  
         2  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 68 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  3  
         0  2  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 74 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         1  0  
         2  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 87 calls to random methods in Board
    - first call to twin() =
        2
         2  3  
         1  0  

    - last  call to twin() =
        2
         0  3  
         2  1  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 31 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         0  2  

    - last  call to twin() =
        2
         1  0  
         2  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 37 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         0  2  

    - last  call to twin() =
        2
         1  0  
         2  3  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 46 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         0  2  

    - last  call to twin() =
        2
         3  1  
         2  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 64 calls to random methods in Board
    - first call to twin() =
        2
         1  3  
         0  2  

    - last  call to twin() =
        2
         2  3  
         1  0  

    - twin1.equals(twin2) = false
    - twin2.equals(twin1) = false

    - failed after 67 calls to random methods in Board
    - first call to twin() =
        2
         1  3  


...

WARNING: the grading output was truncated due to excessive length.
Typically, this is because you have a method that has an unanticipated side effect
(such as printing to standard output or throwing an exception). A large amount of output
can also arise from failing many tests.